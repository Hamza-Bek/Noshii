
@page "/account/identity/login"

@using Application.DTOs.Request.Account
@using Application.Extensions
@using Application.Services
@using NetcodeHub.Packages.Components.Validations.OnInput
@using NetcodeHub.Packages.Components.Modal
@using Microsoft.AspNetCore.Components.Forms

<div class="limiter">
	<div class="container-login100">
		<div class="wrap-login100">
			<div class="login100-pic js-tilt" data-tilt>
				<img src="/imgs/chinesPlate.jpeg" alt="IMG">
			</div>
            <EditForm Model="@User" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger" />
                <span class="login100-form-title">
                    Member Login
                </span>

                <div class="wrap-input100 validate-input" >
                    <InputText class="input100" id="email" @bind-Value="User.Email" placeholder="Email" />
                    <ValidationMessage For="@(() => User.Email)" class="text-danger" />
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="fa fa-envelope" aria-hidden="true"></i>
                    </span>
                    
                </div>

                <div class="wrap-input100 validate-input" >
                    <InputText class="input100" id="pass" type="password" @bind-Value="User.Password" placeholder="Password" />
                    <ValidationMessage For="@(() => User.Password)" class="text-danger" />
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="fa fa-lock" aria-hidden="true"></i>
                    </span>
                  
                </div>

                <div class="container-login100-form-btn">
                    <button type="submit" class="login100-form-btn">
                        Login
                    </button>
                </div>
            </EditForm>

			

				<div class="text-center p-t-136">
                <a class="txt2" href="/account/identity/register">
						Create your Account
						<i class="fa fa-long-arrow-right m-l-5" aria-hidden="true"></i>
					</a>
				</div>
			
		</div>
	</div>
</div>



@code {
    public LoginDTO User { get; set; } = new();


     async Task HandleLogin()
    {

        var response = await accountService.LoginAccountAsync(User);
        if (response.Flag)
        {


            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new LocalStorageDTO()
                {
                    Token = response.Token,
                    Refresh = response.RefreshToken
                });
            NavManager.NavigateTo("/", forceLoad: true);
        }

        // await js.InvokeVoidAsync("alert", message);
        return;
    }
}        
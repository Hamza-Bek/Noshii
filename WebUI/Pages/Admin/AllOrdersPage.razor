@page "/admin/orders"
@using Domain.Models.OrderEntities
@inject IOrderService orderService



@if (orders == null)
{
    <p><em>Loading...</em></p>
}
else
{

	<!-- breadcrumb-section -->
	<div class="breadcrumb-section breadcrumb-bg">
		<div class="container">
			<div class="row">
				<div class="col-lg-8 offset-lg-2 text-center">
					<div class="breadcrumb-text">
						<p>Wait and Take</p>
						<h1>Orders</h1>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- end breadcrumb section -->

	<!-- cart -->
    <div class="cart-section mt-150 mb-150">
        <div class="container">
            <div class="row justify-content-center">
                
                    <div class="cart-table-wrap">
                        <table class="cart-table">
                           
                                
                                @foreach (var order in orders)
                                {
                                <thead class="cart-table-head">
                                    <tr class="table-head-row">
                                        <th class="product-name">Order Number</th>
                                        <th class="product-name">Client</th>
                                        <th class="product-name">Date</th>
                                        <th class="product-price">Total</th>
                                        <th class="product-quantity">Status</th>
                                        <th class="product-total">Actions</th>
                                        <th class="product-total">Details</th>
                                        <th class="product-total">Location</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="table-body-row">
                                        <td class="product-name">@order.OrderNumber</td>
                                        <td class="product-name">@order.OrderMaker.Email</td>
                                        <td class="product-name">@order.OrderDate</td>
                                        <td class="product-name">$@order.OrderTotal</td>
                                        <td class="product-name">@order.OrderStatus</td>
                                        <td>
                                            <select @bind="@order.OrderStatus" class="checkboxes">
                                                @foreach (var kvp in Statuses)
                                                {
                                                    <option value="@kvp.Key">@kvp.Value</option>
                                                }
                                            </select>
                                            <button class="btn btn-primary" @onclick="@(async () => await ChangeOrderStatusAsync(order.OrderId, order.OrderStatus))">Change Status</button>
                                         
                                        </td>
                                        <td>
                                            <button class="btn btn-secondary mt-2" onclick="toggleDetails('order-details-@order.OrderId')">Show Order</button>                                        
                                        </td>
                                        <td>
                                            <button class="btn btn-info mt-2" onclick="toggleLocation('order-location-@order.OrderId')">Show Location</button>
                                        </td>
                                    </tr>

                                    <tr id="order-details-@order.OrderId" class="order-details" style="display: none;">
                                        <td colspan="6">
                                            <div class="plate-items-section">
                                                <h3>Order </h3>
                                                <table class="plate-items-table table table-bordered mt-20">
                                                    <thead>
                                                        <tr>
                                                            <th>Plate Name</th>
                                                            <th>Quantity</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in order.GetOrderDetails)
                                                        {
                                                            <tr>
                                                                <td>@item.PlateName</td>
                                                                <td>@item.Quantity</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </td>
                                    </tr>

                                    <tr id="order-location-@order.OrderId" class="order-location" style="display: none;">
                                        <td colspan="6">
                                            <div class="location-section">
                                                <table class="plate-items-table table table-bordered mt-20">
                                                    <thead>
                                                        <tr>
                                                            <th>Phone</th>
                                                            <th>Country</th>
                                                            <th>Street</th>
                                                            <th>Building</th>
                                                            <th>Floor</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        
                                                            <tr>
                                                                <td>@order.Location?.PhoneNumber </td>
                                                                <td>@order.Location?.Country</td>
                                                                <td>@order.Location?.Street</td>
                                                                <td>@order.Location?.Building</td>
                                                                <td>@order.Location?.Floor</td>                                                            
                                                            </tr>
                                                        
                                                    </tbody>
                                                </table>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                                }
                      
                        </table>
                    </div>                
            </div>
        </div>
    </div>

	<!-- end cart -->

	<!-- footer -->
	<div class="footer-area">
		<div class="container">
			<div class="row">
				<div class="col-lg-3 col-md-6">
					<div class="footer-box about-widget">
						<h2 class="widget-title">About us</h2>
						<p>Ut enim ad minim veniam perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae.</p>
					</div>
				</div>
				<div class="col-lg-3 col-md-6">
					<div class="footer-box get-in-touch">
						<h2 class="widget-title">Get in Touch</h2>
						<ul>
							<li>34/8, East Hukupara, Gifirtok, Sadan.</li>
							<li>support@fruitkha.com</li>
							<li>+00 111 222 3333</li>
						</ul>
					</div>
				</div>
				<div class="col-lg-3 col-md-6">
					<div class="footer-box pages">
						<h2 class="widget-title">Pages</h2>
						<ul>
							<li><a href="index.html">Home</a></li>
							<li><a href="about.html">About</a></li>
							<li><a href="services.html">Shop</a></li>
							<li><a href="news.html">News</a></li>
							<li><a href="contact.html">Contact</a></li>
						</ul>
					</div>
				</div>
				<div class="col-lg-3 col-md-6">
					<div class="footer-box subscribe">
						<h2 class="widget-title">Subscribe</h2>
						<p>Subscribe to our mailing list to get the latest updates.</p>
						<form action="index.html">
							<input type="email" placeholder="Email">
							<button type="submit"><i class="fas fa-paper-plane"></i></button>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- end footer -->

	<!-- copyright -->
	<div class="copyright">
		<div class="container">
			<div class="row">
				<div class="col-lg-6 col-md-12">
					<p>
						Copyrights &copy; 2024 - <a href="https://hamzabek.com/">Hamza Bek</a>,  All Rights Reserved.<br>
						Distributed By - <a href="https://hamzabek.com/">Liado</a>
					</p>
				</div>
				<div class="col-lg-6 text-right col-md-12">
					<div class="social-icons">
						<ul>
							<li><a href="#" target="_blank"><i class="fab fa-facebook-f"></i></a></li>
							<li><a href="#" target="_blank"><i class="fab fa-twitter"></i></a></li>
							<li><a href="#" target="_blank"><i class="fab fa-instagram"></i></a></li>
							<li><a href="#" target="_blank"><i class="fab fa-linkedin"></i></a></li>
							<li><a href="#" target="_blank"><i class="fab fa-dribbble"></i></a></li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- end copyright -->

	<style>
        table.cart-table {
            border: 1px solid #f9f9f9; /* Border around the table */
            width: 1500px;
            ; /* Fixed width for the table */
        }
		.order-details {
			background-color: #c0c0c0; /* Example background color for details */
			text-align: center; /* Center the details box horizontally */
			margin-top: 20px; /* Adjust as needed for vertical spacing */
			padding: 10px; /* Add padding for spacing inside the details box */			
		}
	</style>

    <script>
        function toggleDetails(id) {
            var details = document.getElementById(id);
            if (details.style.display === "none") {
                details.style.display = "table-row";
            } else {
                details.style.display = "none";
            }
        }

        function toggleLocation(id) {
            var location = document.getElementById(id);
            if (location.style.display === "none") {
                location.style.display = "table-row";
            } else {
                location.style.display = "none";
            }
        }

    </script>

    }
@code {
    public IEnumerable<Order>? orders { get; set; }
    public IEnumerable<OrderStatus>? orderStatuses { get; set; }
    Dictionary<string, string> Statuses = new();
    private string AcceptStatusId = "95a16ed5-3da6-4502-ab24-92dc2ec0c777";

    protected override async Task OnInitializedAsync()
    {
        await GetData();
        try
        {
            orders = await orderService.GetAllOrders();
            orderStatuses = await orderService.GetAllStatuses();

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching plates: {ex.Message}");
        }
    }

    bool isLoadingData = true;

    private async Task ChangeOrderStatusAsync(string orderId, string newStatusId)
    {
        try
        {


            if (orderStatuses == null)
            {
                Console.WriteLine("Order statuses not loaded.");
                return;
            }

            var order = orders?.FirstOrDefault(o => o.OrderId == orderId);
            if (order == null)
            {
                Console.WriteLine($"Order not found for Id: {orderId}");
                return;
            }

            if (order.OrderStatus == AcceptStatusId)
            {
                try
                {
                    var user = order.UserId;                   
                    var getUserCart = await orderService.GetUserCart(user);
                    if (getUserCart != null)
                    {
                        
                        await orderService.UpdateUserCartAsync(user);
                        Console.WriteLine($"User Isorder changed! {getUserCart.IsOrdered}");
                        
                    }
               
                }
                catch
                {
                    
                }
            }

            var selectedStatus = orderStatuses.FirstOrDefault(s => s.Id == newStatusId);
            if (selectedStatus == null)
            {
                Console.WriteLine($"Status not found for Id: {newStatusId}");
                return;
            }
            Console.WriteLine($"Status Id: {newStatusId}");

            var response = await orderService.ChangeOrderStatus(orderId, newStatusId);
            
            if (response.flag)
            {
                // Optionally reload the order details or update the UI state
                orders = await orderService.GetAllOrders();
                Console.WriteLine("Order status updated successfully!");
            }
            else
            {
                Console.WriteLine($"Error: {response.message}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error changing order status: {ex.Message}");
        }
        finally
        {
            isLoadingData = false;
        }
    }

    private async Task GetData() => Statuses = await orderService.GetAllStatusesDic();

}
